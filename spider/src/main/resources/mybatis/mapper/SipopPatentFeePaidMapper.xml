<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.ipph.spider.sipop.dao.SipopPatentFeePaidDao">

	<!-- <sql id="column">
		APP_NUMBER_,FEE_NAME_,AMOUNT_,FEE_DATE_,PAYER_,RECEIPT_NO_
	</sql> -->
	<sql id="selectColumns">
		APP_NUMBER_ as appNumber,FEE_NAME_ as feeName ,AMOUNT_ as amount ,FEE_DATE_ as feeDate ,PAYER_ as payer,RECEIPT_NO_ as receiptNo,HASH_ as hash
	</sql>

	<select id="getByAppNumber" resultType="SipopPatentFeePaid">
		select <include refid="selectColumns"></include> from cpquery_patent_fee_paid where APP_NUMBER_=#{appNumber}
	</select>
	
	<delete id="delByAppNumber">
		delete from cpquery_patent_fee_paid where APP_NUMBER_=#{appNumber}
	</delete>
	
	<insert id="add" parameterType="SipopPatentFeePaid">
		insert into cpquery_patent_fee_paid (APP_NUMBER_,FEE_NAME_,AMOUNT_,FEE_DATE_,PAYER_,RECEIPT_NO_,HASH_) 
			values(#{appNumber},#{feeName},#{amount},#{feeDate},#{payer},#{receiptNo},#{hash});
	</insert>
	
	<insert id="batchAdd" parameterType="java.util.List">
		insert into cpquery_patent_fee_paid (APP_NUMBER_,FEE_NAME_,AMOUNT_,FEE_DATE_,PAYER_,RECEIPT_NO_,HASH_) 
   		values
	    <foreach collection="list" item="item" index="index" separator=","> 
	         (#{item.appNumber},#{item.feeName},#{item.amount},#{item.feeDate},#{item.payer},#{item.receiptNo},#{item.hash}) 
	     </foreach>  
	</insert>
	
	<select id="isExist" resultType="boolean">
		select count(*) from cpquery_patent_fee_paid where HASH_=#{hash}
	</select>
	
	<select id="countDistinctAppNumber" resultType="long">
		select count(distinct APP_NUMBER_) from cpquery_patent_fee_paid
	</select>
	
	<select id="getRedisInitData" resultType="map">
		select count(*) num,app_number_ as appNumber from cpquery_patent_fee_paid group by APP_NUMBER_ limit #{from},#{size}
	</select>
	
	<select id="getByAppNumberIn" resultType="SipopPatentFeePaid">
		select <include refid="selectColumns"></include> from cpquery_patent_fee_paid 
		where APP_NUMBER_ in <foreach collection="array" item="item" open="(" close=")" separator=",">#{item}</foreach> 
	</select>
</mapper>